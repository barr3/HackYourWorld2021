Index: KivyMDTest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from kivymd.app import MDApp\r\nfrom kivy.lang import Builder\r\n\r\nimport json\r\nfrom ibm_watson import AssistantV2\r\nfrom ibm_cloud_sdk_core.authenticators import IAMAuthenticator\r\n\r\nfrom kivy.config import Config\r\nConfig.set('graphics', 'width', '370')\r\nConfig.set('graphics', 'height', '600')\r\nConfig.write()\r\n\r\n#Sets API Key\r\nauthenticator = IAMAuthenticator('Paa0LICW2gszbzgDQX_83y5td9ggmRiv0H2RvA88uG0w')\r\n\r\n#Inits assistant\r\nassistant = AssistantV2(\r\n    version='2020-09-24',\r\n    authenticator=authenticator\r\n)\r\nassistant.set_service_url('https://api.eu-de.assistant.watson.cloud.ibm.com')\r\n\r\nsesh_id = assistant.create_session(\r\n        assistant_id='6bc3d805-70f6-4f71-9ee0-def44227ed12'\r\n    ).get_result()\r\n\r\n#Sets py_sesh_id to the session id\r\npy_sesh_id = sesh_id['session_id']\r\n\r\n\r\n#######################################\r\n\r\n#This function takes the input \"input\" and sends it to the assistant.\r\n#The function returns the response that the assistant gives. \r\ndef run_conversation(input):\r\n    user_input = input\r\n    \r\n    response = assistant.message(\r\n        assistant_id='6bc3d805-70f6-4f71-9ee0-def44227ed12',\r\n        session_id=py_sesh_id,\r\n        input={\r\n            'message_type': 'text',\r\n            'text': user_input\r\n        }\r\n    ).get_result()\r\n\r\n    #Really messy and ugly code. Could probaly be cleaned up but it works\r\n    output = response['output']\r\n    generic = output['generic']\r\n    generic_list = generic[0]\r\n    bot_output = generic_list['text']\r\n    #print(bot_output) \r\n    return bot_output\r\n\r\n\r\n\r\n\r\n\r\n\r\n#This class runs the GUI, main.kv is where all the widgets are added\r\n#MainApp\r\nclass MainApp(MDApp):\r\n\r\n\r\n    #This function gets called when the user presses one of the mat/transport-buttons\r\n    def change_mode(self, press):\r\n        #This variable is used to decide which database to get data from\r\n        mode = press\r\n        self.mode = mode\r\n\r\n\r\n    def build(self):\r\n        self.theme_cls.primary_palette = \"Green\"\r\n        self.theme_cls.theme_style = \"Dark\"\r\n        self.theme_cls.primary_hue = \"500\"\r\n        self.screen = Builder.load_file(\"hack.kv\")\r\n        self.mat_press()\r\n        return self.screen\r\n\r\n\r\n    def mat_press(self):\r\n        self.change_mode(\"mat\")\r\n        #self.screen.ids.mat.md_bg_color\r\n        self.screen.ids.matknapp.md_bg_color = [.4,.4,.4,1]\r\n        self.screen.ids.transknapp.md_bg_color = [1,1,1,1]\r\n        self.screen.ids.input.hint_text = \"Jag har ätit:\"\r\n\r\n    def trans_press(self):\r\n        self.change_mode(\"transport\")\r\n        self.screen.ids.transknapp.md_bg_color = [.4,.4,.4,1]\r\n        self.screen.ids.matknapp.md_bg_color = [1,1,1,1]\r\n        self.screen.ids.input.hint_text = \"Jag har åkt:\"\r\n\r\n        #This function takes the value of what is put in the textfield in the gui\r\n        #and sends it to the assistan using run_conversation\r\n\r\n        \r\n\r\n    def press(self):\r\n        input = self.screen.ids.input.text\r\n        #self.screen.ids.response.text = run_conversation(input)\r\n\r\n        print(\"input: \", input)\r\n        print(\"mode: \", self.mode)\r\n        #Clears the \r\n        self.screen.ids.input.text = \"\"\r\n\r\n\r\n\r\nMainApp().run()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/KivyMDTest.py b/KivyMDTest.py
--- a/KivyMDTest.py	(revision b288d6b62df8249de565d1c9e96c7af396aed64d)
+++ b/KivyMDTest.py	(date 1614240182125)
@@ -107,4 +107,4 @@
 
 
 
-MainApp().run()
+MainApp().run()
\ No newline at end of file
Index: CloudantTest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from cloudant.client import Cloudant\r\nfrom cloudant.error import CloudantException\r\nfrom cloudant.result import Result, ResultByKey\r\n\r\nclient = Cloudant.iam(\"5861e444-61ce-4c94-8d14-a94dfa36ede3-bluemix\",\r\n                      \"R9ePmy_llFF4gTtBPQROafzl4Ee2xALLiMzTWeCCnn13\", connect=True)\r\nclient.connect()\r\ndatabaseName = \"databasedemo\"\r\nmyDatabaseDemo = client.create_database(databaseName)\r\nif myDatabaseDemo.exists():\r\n    print(\"'{0}' successfully created.\\n\".format(databaseName))\r\n\r\ntestData = [[\"BigMac\", 1000, \"Beskrivnings test\"],\r\n            [\"Sallad\", 200, \"Coolare än BigMac\"]]\r\n\r\n# skriv in datan i json och skicka till databasen\r\nfor data in testData:\r\n    jsonDoc = {\r\n        \"namn\": data[0],\r\n        \"co2\": data[1],\r\n        \"beskrivning\": data[2]\r\n    }\r\n    newDoc = myDatabaseDemo.create_document(jsonDoc)\r\n\r\nif (newDoc.exists()):\r\n    print('new doc created')\r\n\r\n# hämta data från alla document\r\nresult = Result(myDatabaseDemo.all_docs, include_docs=True)\r\nprint(format(result[0]))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CloudantTest.py b/CloudantTest.py
--- a/CloudantTest.py	(revision b288d6b62df8249de565d1c9e96c7af396aed64d)
+++ b/CloudantTest.py	(date 1614240923499)
@@ -5,12 +5,12 @@
 client = Cloudant.iam("5861e444-61ce-4c94-8d14-a94dfa36ede3-bluemix",
                       "R9ePmy_llFF4gTtBPQROafzl4Ee2xALLiMzTWeCCnn13", connect=True)
 client.connect()
-databaseName = "databasedemo"
+databaseName = "User"
 myDatabaseDemo = client.create_database(databaseName)
 if myDatabaseDemo.exists():
     print("'{0}' successfully created.\n".format(databaseName))
 
-testData = [["BigMac", 1000, "Beskrivnings test"],
+testData = [[],
             ["Sallad", 200, "Coolare än BigMac"]]
 
 # skriv in datan i json och skicka till databasen
@@ -27,4 +27,4 @@
 
 # hämta data från alla document
 result = Result(myDatabaseDemo.all_docs, include_docs=True)
-print(format(result[0]))
+print(format(result[0]))
\ No newline at end of file
